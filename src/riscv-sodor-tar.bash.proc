#!/bin/bash

set -e
set -o pipefail

CHISEL_HASH="$(cat src/chisel-jar.bash.proc | grep CHISEL_HASH= | cut -d\" -f2 | head -n1)"
FESVR_HASH="23b5b11c2b2d64397b3e1872eed46cfaef271d27"
SODOR_HASH="556cff3b3947911671852aa573f0d4f57dc51b0d"

if [[ "$1" == "--deps" ]]
then
    echo "src/chisel-jar.bash.proc"
    exit 0
fi

if [[ "$1" == "--generate" ]]
then
    tempdir=`mktemp -d -t generate_sodor-tar.XXXXXXXXXX`
    trap "rm -rf $tempdir" EXIT

    mkdir -p $tempdir/install/bin
    export PATH="$tempdir/install/bin:$PATH"

    cat >$tempdir/install/bin/vcd2vpd <<"EOF"
#!/bin/bash

cat $1 | sed s/'^$var reg '/'$var wire '/ > $2
EOF
    chmod +x $tempdir/install/bin/vcd2vpd

    cd $tempdir
    git clone git://github.com/ucb-bar/chisel --reference /var/cache/git \
        >& /dev/null
    cd chisel
    git reset --hard $CHISEL_HASH >& /dev/null

    cd $tempdir
    git clone git://github.com/ucb-bar/riscv-fesvr --reference /var/cache/git \
        >& /dev/null
    cd riscv-fesvr
    git reset --hard $FESVR_HASH >& /dev/null
    ./configure --prefix=$tempdir/install >& /dev/null
    make >& /dev/null
    make install >& /dev/null

    cd $tempdir
    git clone git://github.com/palmer-dabbelt/riscv-sodor --reference /var/cache/git \
        >& /dev/null
    cd riscv-sodor
    git reset --hard $SODOR_HASH >& /dev/null
    ./configure --with-riscv=$tempdir/install --with-chisel=$tempdir/chisel >& /dev/null
    cd emulator/rv32_1stage/
    make -j1 output/add.vpd >& /dev/null
    cd - >& /dev/null
    rename vpd vcd $(find -iname *.vpd)

    cd $tempdir/riscv-sodor && java -Xmx4096M -Xss8M -XX:MaxPermSize=128M -jar $tempdir/riscv-sodor/sbt/sbt-launch.jar  "project rv32_1stage" "run --noIoDebug --wio --backend flo --debug --ioDebug --targetDir emulator/rv32_1stage/generated-src-debug --debug --vcd --ioDebug" >& /dev/null

    # Here we actually generate the BASH archive that's going to be
    # used
    echo "CHISEL_HASH=\"$CHISEL_HASH\""
    echo "FESVR_HASH=\"$FESVR_HASH\""
    echo "SODOR_HASH=\"$SODOR_HASH\""

    # Copy the Flo file into the output directory
    cat <<"EOF"
SODOR_DIR=`mktemp -d -t chisel-benchmarks.XXXXXXXXXX`
trap "rm -rf $SODOR_DIR" EXIT

cat >$SODOR_DIR/rv32_1stage.flo.base64 <<EOF
EOF

    cat "$(find -iname *.flo)" | base64

    cat <<"EOFEOF"
EOF

cat $SODOR_DIR/rv32_1stage.flo.base64 | base64 -d > $SODOR_DIR/rv32_1stage.flo
EOFEOF

    # tar up the dumped VCDs
    cat <<"EOF"
cat >$SODOR_DIR/rv32_1stage.tar.gz.base64 <<EOF
EOF

    cd emulator/rv32_1stage/
    mv output/ rv32_1stage
    tar -c rv32_1stage/*.vcd | gzip | base64

    cat <<"EOFEOF"
EOF

cat $SODOR_DIR/rv32_1stage.tar.gz.base64 |  base64 -d | gunzip > $SODOR_DIR/rv32_1stage.tar
EOFEOF

# Note this fi, the tabs are broken because of the EOFs
fi
